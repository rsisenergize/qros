name: üöÄ Qros CI/CD Deep Debug Pipeline

on:
  push:
    branches:
      - main

jobs:
  # ===========================================================
  # 1Ô∏è‚É£ BUILD JOB
  # ===========================================================
  build:
    name: üß± Build Qros (Deep Debug)
    runs-on: ubuntu-latest

    steps:
      - name: üß© Checkout code
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, intl, mysql, gd, exif, pcntl

      - name: üîç Locate Laravel root
        id: detect-root
        run: |
          echo "üîé Searching for artisan..."
          ARTISAN_PATH=$(find . -type f -name artisan | head -n 1 | xargs dirname)
          if [ -z "$ARTISAN_PATH" ]; then
            echo "‚ùå Could not find artisan!"; exit 1
          fi
          echo "‚úÖ Found artisan at: $ARTISAN_PATH"
          echo "ARTISAN_PATH=$ARTISAN_PATH" >> $GITHUB_ENV

      - name: üì¶ Install Composer Dependencies
        run: |
          cd "$ARTISAN_PATH"
          mkdir -p bootstrap/cache
          chmod -R 777 bootstrap/cache
          composer install --no-dev --optimize-autoloader

      - name: üß∞ Build Frontend (if exists)
        run: |
          cd "$ARTISAN_PATH"
          if [ -f package.json ]; then
            npm install
            npm run build || npm run prod || echo "‚ö†Ô∏è No npm build step found"
          else
            echo "‚ÑπÔ∏è No frontend detected, skipping."
          fi

      - name: üõ† Run rsync with debug
        run: |
          echo "üì¶ Copying Laravel from $ARTISAN_PATH to deploy/..."
          mkdir -p deploy
          set -x
          rsync -av --progress "$ARTISAN_PATH/" ./deploy/ \
            --exclude='.git*' \
            --exclude='node_modules' \
            --exclude='tests' \
            --exclude='.env*' \
            --exclude='storage/app/public/*' \
            --exclude='storage/logs/*' \
            --exclude='storage/framework/*' \
            --exclude='public/uploads/*'
          RSYNC_EXIT=$?
          set +x
          echo "rsync exit code: $RSYNC_EXIT"
          if [ $RSYNC_EXIT -ne 0 ]; then exit $RSYNC_EXIT; fi

      - name: üîç Debug: deploy folder verification
        run: |
          echo "=== deploy/ top-level ==="
          ls -la deploy || true
          echo
          echo "=== Count files ==="
          find deploy -type f | wc -l || true
          echo
          echo "=== List first 200 files (relative) ==="
          find deploy -type f -printf '%P\n' | head -n 200 || true
          echo
          echo "=== Verify key files exist ==="
          for f in artisan composer.json composer.lock app bootstrap config routes public; do
            if [ -e "deploy/$f" ]; then echo "FOUND: $f"; else echo "MISSING: $f"; fi
          done

      - name: üßæ Create tar of deploy folder for verification
        run: |
          tar -czf /tmp/deploy.tgz -C deploy .
          echo "Tar size:"
          ls -lh /tmp/deploy.tgz || true
          echo "Tar contents (first 200):"
          tar -tf /tmp/deploy.tgz | head -n 200

      - name: üì§ Upload Artifact (qros_build)
        uses: actions/upload-artifact@v4
        with:
          name: qros_build
          path: deploy/

  # ===========================================================
  # 2Ô∏è‚É£ DEPLOY JOB (DEV)
  # ===========================================================
  deploy-dev:
    name: üå± Deploy to Dev (Debug)
    runs-on: ubuntu-latest
    needs: build
    environment: dev

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: qros_build
          path: build/

      - name: üß© Checkout code
        uses: actions/checkout@v4

      - name: üîç Debug: after artifact download
        run: |
          echo "PWD: $(pwd)"
          echo "Workspace listing:"
          ls -la | head -n 50
          echo
          echo "=== build/ directory ==="
          if [ -d build ]; then
            ls -la build | head -n 50
            echo "File count in build:"
            find build -type f | wc -l
            echo "Sample of files:"
            find build -type f -printf '%P\n' | head -n 200
            echo "Check key Laravel files:"
            for f in artisan composer.json routes app public; do
              if [ -e "build/$f" ]; then echo "FOUND: $f"; else echo "MISSING: $f"; fi
            done
          else
            echo "‚ùå build/ folder missing after artifact download"
          fi

      - name: ‚úÖ Guard: ensure build has files
        run: |
          if [ ! -d build ]; then echo "‚ùå build folder missing"; exit 1; fi
          COUNT=$(find build -type f | wc -l)
          echo "Total files in build: $COUNT"
          if [ "$COUNT" -lt 5 ]; then
            echo "‚ùå Not enough files (<5). Aborting upload."
            exit 1
          fi

      - name: üîê Copy Dev Environment File
        run: |
          if [ -f .env.dev ]; then
            cp .env.dev build/.env && echo "‚úÖ Copied .env.dev"
          else
            echo "‚ö†Ô∏è .env.dev missing, skipping copy."
          fi

      - name: üöÄ Upload via SSH (SCP)
        if: success() && (hashFiles('build/**') != '')
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "build/."
          target: ${{ secrets.DEPLOY_PATH_DEV }}

      - name: üîç Debug on remote server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_PATH_DEV }} || exit 1
            echo "=== Remote deploy path: $(pwd) ==="
            echo "Top-level:"
            ls -la | head -n 50
            echo "Count of files:"
            find . -type f | wc -l
            echo "Check artisan:"
            if [ -f artisan ]; then echo "‚úÖ artisan present"; else echo "‚ùå artisan missing"; fi
            echo "List first 100 files:"
            find . -type f -printf '%P\n' | head -n 100

      - name: üß† Run Laravel Commands (Dev)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_PATH_DEV }} || exit 1
            chmod -R 775 storage bootstrap/cache || true
            php artisan storage:link || true
            php artisan migrate --force || (php artisan migrate:rollback && exit 1)
            php artisan optimize:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
