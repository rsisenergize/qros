name: 🚀 Qros Multi-Environment CI/CD (Final Stable SSH Deployment)

on:
  push:
    branches:
      - main

jobs:
  # ===========================================================
  # 1️⃣ BUILD JOB
  # ===========================================================
  build:
    name: 🧱 Build Qros
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: ⚙️ Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, intl, mysql, gd, exif, pcntl

      - name: 📦 Install Composer Dependencies
        run: |
          mkdir -p bootstrap/cache
          chmod -R 777 bootstrap/cache
          composer install --no-dev --optimize-autoloader

      - name: 🧰 Build Frontend (if exists)
        run: |
          if [ -f package.json ]; then
            npm install
            npm run build || npm run prod || echo "⚠️ No npm build step found"
          else
            echo "ℹ️ No frontend detected, skipping."
          fi

      - name: 📁 Prepare Deployment Package
        run: |
          echo "📦 Copying Laravel app to deploy directory..."
          mkdir -p deploy
          rsync -av --progress ./ ./deploy/ \
            --exclude='.git*' \
            --exclude='node_modules' \
            --exclude='tests' \
            --exclude='.env*' \
            --exclude='storage/app/public/*' \
            --exclude='storage/logs/*' \
            --exclude='storage/framework/*' \
            --exclude='public/uploads/*'
          echo "✅ Copy complete."

      - name: ✅ Verify deploy folder before upload
        run: |
          FILE_COUNT=$(find deploy -type f | wc -l)
          echo "📁 Files in deploy: $FILE_COUNT"
          if [ -f deploy/artisan ]; then echo "✅ Artisan found"; else echo "❌ Artisan missing"; exit 1; fi

      - name: 📤 Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: qros_build
          path: deploy/

  # ===========================================================
  # 2️⃣ DEPLOY TO DEV
  # ===========================================================
  deploy-dev:
    name: 🌱 Deploy to Dev (Deep Debug)
    runs-on: ubuntu-latest
    needs: build
    environment: dev

    steps:
      - name: 🧩 Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: qros_build
          path: build/
          merge-multiple: true

      - name: ✅ Verify Artifact Download
        run: |
          echo "=== Checking artifact ==="
          if [ -d build ]; then
            echo "✅ build/ folder exists"
            ls -la build | head -n 30
            echo "Total files in build:"
            find build -type f | wc -l
          else
            echo "⚠️ build folder missing after download — creating manually."
            mkdir -p build
          fi

      - uses: actions/checkout@v4

      - name: 🔐 Copy Dev Environment File
        run: |
          mkdir -p build
          if [ -f .env.dev ]; then
            cp .env.dev build/.env
            echo "✅ .env.dev copied to build/.env"
          else
            echo "❌ .env.dev not found"
            exit 1
          fi

      # 🔍 Inspect local build folder deeply before SCP
      - name: 🔍 Inspect build folder before SCP
        run: |
          echo "=== Recursive structure of build/ ==="
          ls -R build | head -n 200
          echo
          echo "Total file count:"
          find build -type f | wc -l
          echo
          echo "Check artisan:"
          find build -type f -name artisan || echo "❌ Artisan not found inside build/"
          echo
          du -sh build || true

      # 🧰 Flatten nested artifact folder if present
      - name: 🧰 Flatten nested artifact folder (if needed)
        run: |
          if [ -d build/qros_build ]; then
            echo "Detected nested artifact: build/qros_build/"
            mv build/qros_build/* build/
            rm -rf build/qros_build
            echo "✅ Flattened artifact structure."
          fi
          echo "Listing build after flattening:"
          ls -la build | head -n 20

      # 🚀 Upload via SSH (SCP)
      - name: 🚀 Upload to Dev via SSH (Direct Copy Mode)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "build/*"
          target: "${{ secrets.DEPLOY_PATH_DEV }}/"
          strip_components: 0
          tar_dereference: false
          rm: false
          overwrite: true
          debug: true


      # 🧾 Verify remote files after SCP
      - name: 🧾 Verify Remote Files After Upload
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_PATH_DEV }} || exit 1
            echo "=== Files at remote deploy path ==="
            pwd
            ls -la | head -n 50
            echo "Total files in remote path:"
            find . -type f | wc -l
            echo "Looking for artisan:"
            find . -type f -name artisan || echo "❌ Artisan not found remotely"

      # 🧠 Run Laravel Commands (Dev)
      - name: 🧠 Run Laravel Commands (Dev)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_PATH_DEV }}
            chmod -R 775 storage bootstrap/cache || true
            php artisan storage:link || true
            php artisan migrate --force
            php artisan optimize:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache


  # ===========================================================
  # 3️⃣ DEPLOY TO TEST
  # ===========================================================
  deploy-test:
    name: 🧪 Deploy to Test
    runs-on: ubuntu-latest
    needs: deploy-dev
    environment:
      name: test
      url: https://test.qros.in

    steps:
      - name: 🧩 Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: qros_build
          path: build/
          merge-multiple: true

      - name: ✅ Verify Artifact Download
        run: |
          if [ -d build ]; then
            echo "✅ build/ folder exists"
          else
            echo "⚠️ build folder missing — creating manually."
            mkdir -p build
          fi

      - uses: actions/checkout@v4

      - name: 🔐 Copy Test Environment File
        run: |
          mkdir -p build
          if [ -f .env.test ]; then
            cp .env.test build/.env
            echo "✅ .env.test copied to build/.env"
          else
            echo "❌ .env.test not found"
            exit 1
          fi

      - name: 🚀 Upload to Test via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "build/."
          target: ${{ secrets.DEPLOY_PATH_TEST }}

      - name: 🧠 Run Laravel Commands (Test)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_PATH_TEST }}
            chmod -R 775 storage bootstrap/cache || true
            php artisan migrate --force
            php artisan optimize:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

  # ===========================================================
  # 4️⃣ DEPLOY TO PREPROD
  # ===========================================================
  deploy-preprod:
    name: 🚀 Deploy to Preprod
    runs-on: ubuntu-latest
    needs: deploy-test
    environment:
      name: preprod
      url: https://preprod.qros.in

    steps:
      - name: 🧩 Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: qros_build
          path: build/
          merge-multiple: true

      - name: ✅ Verify Artifact Download
        run: |
          if [ -d build ]; then
            echo "✅ build/ folder exists"
          else
            echo "⚠️ build folder missing — creating manually."
            mkdir -p build
          fi

      - uses: actions/checkout@v4

      - name: 🔐 Copy Preprod Environment File
        run: |
          mkdir -p build
          if [ -f .env.preprod ]; then
            cp .env.preprod build/.env
            echo "✅ .env.preprod copied to build/.env"
          else
            echo "❌ .env.preprod not found"
            exit 1
          fi

      - name: 🚀 Upload to Preprod via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "build/."
          target: ${{ secrets.DEPLOY_PATH_PREPROD }}

      - name: 🧠 Run Laravel Commands (Preprod)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_PATH_PREPROD }}
            chmod -R 775 storage bootstrap/cache || true
            php artisan migrate --force
            php artisan optimize:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

  # ===========================================================
  # 5️⃣ DEPLOY TO PRODUCTION
  # ===========================================================
  deploy-prod:
    name: 🏁 Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-preprod
    environment:
      name: production
      url: https://qros.in

    steps:
      - name: 🧩 Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: qros_build
          path: build/
          merge-multiple: true

      - name: ✅ Verify Artifact Download
        run: |
          if [ -d build ]; then
            echo "✅ build/ folder exists"
          else
            echo "⚠️ build folder missing — creating manually."
            mkdir -p build
          fi

      - uses: actions/checkout@v4

      - name: 🔐 Copy Production Environment File
        run: |
          mkdir -p build
          if [ -f .env.prod ]; then
            cp .env.prod build/.env
            echo "✅ .env.prod copied to build/.env"
          else
            echo "❌ .env.prod not found"
            exit 1
          fi

      - name: 🚀 Upload to Production via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "build/."
          target: ${{ secrets.DEPLOY_PATH_PROD }}

      - name: 🧠 Run Laravel Commands (Production)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_PATH_PROD }}
            php artisan down || true
            chmod -R 775 storage bootstrap/cache || true
            php artisan storage:link || true
            php artisan migrate --force
            php artisan optimize:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan up || true
